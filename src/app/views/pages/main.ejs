<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .todo > div {
            transition: 0.5s;
        }

        .todo > div:hover {
            transform: translateX(-50px);
        }
    </style>
</head>
<body>

    <nav class="navbar bg-body-tertiary">
        <div class="container d-flex justify-content-between">
            <div>
                <a class="navbar-brand" href="#">MyTodo List</a>
            </div>
            <div class="d-flex align-items-center gap-2">
                <div><%= username %></div>
                <div>
                    <a href="/user/profile" title="Profile">
                        <img src="/img/profile.jpeg" alt="" class="rounded-circle" width="50" height="50">
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <div class="container mt-3">

        <!-- Button to trigger the modal -->
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
            Add List
        </button>
        
        <!-- Modal add -->
        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="exampleModalLabel">Add List</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <!-- Form to submit data -->
                        <form>
                            <input type="hidden" name="id" id="idUser" value="<%= id %>">
                            <div class="mb-3">
                                <label for="kegiatan" class="form-label">Title</label>
                                <input type="text" class="form-control" id="kegiatan" name="kegiatan" required>
                            </div>
                            <div class="mb-3">
                                <label for="deskripsi" class="form-label">Description</label>
                                <textarea class="form-control" id="deskripsi" name="deskripsi" rows="3" required></textarea>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <!-- Submit button to trigger form submission -->
                        <button type="submit" form="addTodoForm" class="btn btn-primary submitList">Save changes</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

       <!-- Modal edit -->
<div class="modal fade" id="editlist" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Edit List</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Form untuk edit -->
                <form>
                    <div class="mb-3">
                        <label for="kegiatanEdit" class="form-label">Title</label>
                        <input type="text" class="form-control" id="kegiatanEdit" name="kegiatan" required>
                    </div>
                    <div class="mb-3">
                        <label for="deskripsiEdit" class="form-label">Description</label>
                        <textarea class="form-control" id="deskripsiEdit" name="deskripsi" rows="3" required></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary submitEdit">Save changes</button>
            </div>
        </div>
    </div>
</div>


    <section class="container todo">
        
    </section>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>

       let kegiatan = document.querySelector('#kegiatan')
       let deskripsi = document.querySelector('#deskripsi')
       let id = document.querySelector('#idUser')
       let submitList = document.querySelector('.submitList')
        
       submitList.addEventListener('click', (e) => {
            e.preventDefault()
            console.log(kegiatan.value)
            console.log(deskripsi.value)
            console.log(id.value)
            fetch("http://localhost:8081/todo", {
                        method: "POST",
                        headers : {
                            "Content-Type" : "Application/json"
                        },
                        body: JSON.stringify({
                            kegiatan : kegiatan.value,
                            deskripsi : deskripsi.value,
                            id : id.value
                        }),
                    })
                    .then(res => res.json())
                    .then(res => {
                        if (res.status = "sukses") {
                            window.location.href = "http://localhost:8081/todo/dashboard";
                        } else {
                            // Handle error
                            alert("Failed to submit the form. Please try again.");
                        }
                    })
                .catch(error => {
                    console.error("Error submitting the form:", error);
                    alert("An error occurred. Please check your network connection.");
                })
       })

       fetch("http://localhost:8081/todo/")
       .then(res => res.json())
       .then(res  => {
        console.log(res)
            if(res.status == "sukses") {
                for (let i = 0; i < res.data.length; i++) {
                    
                    let section = document.querySelector('.todo')
                    section.innerHTML += `<div class="bg-dark-subtle rounded m-2 mx-0 p-3 px-4">
            <h3 class="text-primary">${res.data[i].kegiatan}</h3>
            <div class="mb-2">${res.data[i].deskripsi}</div>
            <div>
                <button class="btn btn-warning text-white editlist" x-data="${res.data[i].idList}" data-bs-toggle="modal" data-bs-target="#editlist">Edit</button>
                <button class="btn btn-danger deleteList" data-id="${res.data[i].idList}">Delete</button>
            </div>
        </div>`
                }
            }
       })


        let editButtons;
        let kegiatanEdit = document.querySelector('#kegiatanEdit');
        let deskripsiEdit = document.querySelector('#deskripsiEdit');
        let submitEdit = document.querySelector('.submitEdit');

        // Fungsi untuk memperbarui data di modal edit
     document.addEventListener('click', (e) => 
    {
        if (e.target.classList.contains('editlist')) {
            let idList = e.target.getAttribute('x-data');
            fetch(`http://localhost:8081/todo/get/${idList}`, {
                method : "GET"
            })
                .then((res) => res.json())
                .then((data) => {
                    if (data.status === 'sukses') {
                        console.log(data.data[0].kegiatan)
                        kegiatanEdit.value = data.data[0].kegiatan;
                        deskripsiEdit.value = data.data[0].deskripsi;
                        submitEdit.setAttribute('x-data', idList);
                    } else {
                        console.log("gagal")
                    }
                });
        }
    });

            // Submit data edit ke server
        submitEdit.addEventListener('click', (e) => {
            e.preventDefault();
        let idList = submitEdit.getAttribute('x-data');
        fetch(`http://localhost:8081/todo/update/${idList}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'Application/json',
            },
            body: JSON.stringify({
                kegiatan: kegiatanEdit.value,
                deskripsi: deskripsiEdit.value,
            }),
        })
            .then((res) => res.json())
            .then((res) => {
                if (res.status === 'sukses') {
                    alert('List updated successfully!');
                    window.location.href = "http://localhost:8081/todo/dashboard";
                } else {
                    alert('Failed to update the list.');
                }
            })
            .catch((error) => {
                console.error('Error updating the list:', error);
                alert('An error occurred. Please try again later.');
            });

    });

    document.addEventListener('click', (e) => {
    if (e.target.classList.contains('deleteList')) {
        let idList = e.target.getAttribute('data-id'); // Get the ID from data-id attribute
        
        if (confirm("Are you sure you want to delete this item?")) {
            fetch(`http://localhost:8081/todo/delete/${idList}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
            .then(res => res.json())
            .then(res => {
                if (res.status === 'sukses') {
                    alert('Item deleted successfully!');
                    window.location.href = "http://localhost:8081/todo/dashboard"
                } else {
                    alert('Failed to delete the item.');
                }
            })
            .catch((error) => {
                console.error('Error deleting the item:', error);
                alert('An error occurred. Please try again later.');
            });
        }
    }
})

    </script>
</body>
</html>
